name: 'Git Commit Info'
description: 'This GitHub Action extracts commit information like sha, sha_short, username, and URL from commits.'

inputs:
  ACCESS_TOKEN:
    description: 'GitHub personal access token (with repo access)'
    required: true

outputs:
  username:
    description: "username of target workflow jobs"
    value: ${{ steps.extract_commit_info.outputs.username }}
  sha_short:
    description: "sha_short of target workflow jobs"
    value: ${{ steps.extract_commit_info.outputs.sha_short }}
  url:
    description: "url of target workflow jobs"
    value: ${{ steps.extract_commit_info.outputs.url }}
  commit_message:
    description: "commit_message of target workflow jobs"
    value: ${{ steps.extract_commit_info.outputs.commit_message }}

runs:
  using: 'composite'
  steps:
    - name: Declare variables
      if: ${{ !cancelled() }}
      id: extract_commit_info
      shell: pwsh
      run: |
        if ($env:GITHUB_EVENT_NAME -eq "pull_request") {
          $sha = "${{ github.event.pull_request.head.sha }}"
          $sha_short = $sha.Substring(0, 7)
          $branch_ref = $env:GITHUB_REF -replace '^refs/heads/', ''
          $converted_ref = $branch_ref -replace '^refs/pull/(\d+)/merge$', 'pull/$1'
          $url = "https://github.com/${{ github.repository }}/$converted_ref/commits/$sha"
        } else {
          $sha = "${{ github.sha }}"
          $sha_short = (git rev-parse --short $sha)
          $url = "https://github.com/${{ github.repository }}/commit/$sha"
        }

        $authHeader = @{
          "Authorization" = "Bearer ${{ inputs.ACCESS_TOKEN }}"
          "Accept" = "application/vnd.github.v3+json"
        }
        $commit_message = git log -1 --no-merges --pretty=%B
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/commits/$sha" -Headers $authHeader
        $username = $response.author.login

        Write-Output "::set-output name=sha_short::$sha_short"
        Write-Output "::set-output name=url::$url"
        Write-Output "::set-output name=username::$username"
        Write-Output "::set-output name=commit_message::$commit_message"
        
        Write-Host "Commit Message: $commit_message"
        Write-Host "Short sha: $sha_short"
        Write-Host "username: $username"
        Write-Host "url: $url"
